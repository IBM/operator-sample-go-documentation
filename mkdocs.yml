# Project information
site_name:  Kubernetes Operator Patterns and Best Practises Documentation
site_url: https://github.com/thomassuedbroecker/operator-sample-go-documentation
site_author:  Adam de Leeuw, Alain Airom, Diwakar Tiwari, Niklas Heidloff,  Sundeep Binaylal Golla, Thomas Suedbroecker

# Repository
repo_name: Kubernetes Operator Patterns and Best Practises
repo_url: https://github.com/IBM/operator-sample-go
edit_uri: edit/main/documentation
docs_dir: documentation

# Navigation
nav:
  - 1. Introduction:
    - 1.1 Overview: ./template.md
    - 1.2 Architecture overview: ./template.md
    - 1.3 Demo use cases overview: ./template.md
    - 1.4 Masterclass overview: ./template.md
  - 2. Dev env:
    - 2.1 Overview: ./template.md
    - 2.2 Prereqs: ./prerequisites.md
    - 2.3 Setup of IKS: ./automation-setup-kubernetes.md
    - 2.4 Setup of ROKS: ./automation-setup-openshift.md
    - 2.5 Run operators locally: ./automation-run-operator-locally.md
    - 2.6 Run operators without OLM: ./automation-run-operators-without-olm.md
    - 2.7 Run operators with OLM: ./template.md
  - 3. Demos:
    - 3.1 Overview: ./template.md
    - 3.2 OperatorHub: ./template.md
    - 3.3 Database backup: ./template.md
    - 3.4 Auto-scaler: ./template.md
  - 4. Automated build and deployment:
    - 4.1 Overview: ./template.md
    - 4.2 Kubernetes: ./automation-setup-kubernetes.md
    - 4.3 OpenShift: ./template.md
  - 5. Overview and Scenarios:
    - 5.1 Overview: ./template.md
    - 5.2 Why you should build Kubernetes Operators: ./template.md
    - 5.3 Day 2 Scenario - Automatically Archiving Data: ./template.md
    - 5.4 Day 2 Scenario - Automatically Scaling Applications: ./template.md
    - 5.6 The Kubernetes Operator Metamodel: ./template.md
  - 6. Basic Capabilities:
    - 6.1 Overview: ./overview_basic_capabilities.md
    - 6.2 Creating and updating Resources: http://heidloff.net/article/updating-resources-kubernetes-operators
    - 6.3 Deleting Resources: http://heidloff.net/article/deleting-resources-kubernetes-operators
    - 6.4 Storing State of Resources with Conditions: http://heidloff.net/article/storing-state-status-kubernetes-resources-conditions-operators-go
    - 6.5 Finding out the Kubernetes Versions and Capabilities: http://heidloff.net/article/finding-kubernetes-version-capabilities-operators
    - 6.6 Configuring Webhooks: http://heidloff.net/article/configuring-webhooks-kubernetes-operators
    - 6.7 Initialization and Validation Webhooks: http://heidloff.net/article/developing-initialization-validation-webhooks-kubernetes-operators
    - 6.8 Converting Custom Resource Versions: http://heidloff.net/article/converting-custom-resource-versions-kubernetes-operators
    - 6.9 Defining Dependencies: http://heidloff.net/article/defining-dependencies-kubernetes-operators
  - 7. Advanced Capabilities:
    - 7.1 Overview: ./overview_advanced_capabilities.md
    - 7.2 Exporting Metrics from Kubernetes Apps for Prometheus: http://heidloff.net/article/exporting-metrics-kubernetes-applications-prometheus
    - 7.3 Accessing Kubernetes from Go Applications: http://heidloff.net/article/accessing-kubernetes-from-go-applications
    - 7.4 How to build your own Database on Kubernetes: http://heidloff.net/article/how-to-build-your-own-database-on-kubernetes
    - 7.5 Building Databases on Kubernetes with Quarkus: http://heidloff.net/quarkus/building-databases-kubernetes-quarkus
  - 8. Golang:
    - 8.1 Overview: ./overview_golang.md
    - 8.2 Importing Go Modules in Operators: http://heidloff.net/article/importing-go-modules-kubernetes-operators
    - 8.3 Accessing third Party Custom Resources in Go Operators: http://heidloff.net/article/accessing-third-party-custom-resources-go-operators
    - 8.4 Using object-oriented Concepts in Golang based Operators: http://heidloff.net/article/object-oriented-concepts-golang

## DO NOT CHANGE BELOW THIS LINE

# Copyright
#copyright: Copyright &copy; 2022 IBM Developer

# Theme
theme:
  name: material
  font:
    text: IBM Plex Sans
    code: IBM Plex Mono
  icon:
    # .svg automatically appended
    # logo: ibm_8bar_reverse_2
    logo: material/library
  features:
    # - navigation.tabs
    - navigation.instant
    # - navigation.expand
  palette:
    scheme: default
    primary: black
    accent: blue
  # palette:
  #  scheme: default
  #  primary: blue
  #  accent: blue
  # enable if you want to use a custom icon
  # custom_dir: overrides

# Customization
extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/IBM/operator-sample-go
  generator: false

extra_css:
  - docs/stylesheets/extra.css
  - stylesheets/extra.css

# Extensions
markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - meta
  - toc:
      permalink: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.highlight
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets:
      check_paths: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
